diff -rupN rtmpdump/log.h rtmpdump-mlbviewer/log.h
--- rtmpdump/log.h	2009-03-12 07:41:15.000000000 -0700
+++ rtmpdump-mlbviewer/log.h	2009-04-04 11:46:09.000000000 -0700
@@ -21,7 +21,7 @@
 #ifndef __LOG_H__
 #define __LOG_H__
 
-#define _DEBUG
+//#define _DEBUG
 
 #ifdef _DEBUG
 #undef NODEBUG
diff -rupN rtmpdump/rtmp.cpp rtmpdump-mlbviewer/rtmp.cpp
--- rtmpdump/rtmp.cpp	2009-03-11 15:13:23.000000000 -0700
+++ rtmpdump-mlbviewer/rtmp.cpp	2009-04-04 18:01:00.000000000 -0700
@@ -99,6 +99,18 @@ CRTMP::~CRTMP()
 double CRTMP::GetDuration() { return m_fDuration; }
 bool CRTMP::IsConnected() { return m_socket != 0; }
 
+bool CRTMP::GetSubscribe() { return bSubscribe; }
+
+void CRTMP::SetSubscribe(bool subscribe) { 
+  bSubscribe = subscribe;
+}
+
+char * CRTMP::GetSubscribePath() { return subscribepath; }
+
+void CRTMP::SetSubscribePath(char * path) {
+  subscribepath = path;
+}
+
 void CRTMP::SetBufferMS(int size)
 {
   m_nBufferMS = size;
@@ -465,6 +477,27 @@ bool CRTMP::SendBGHasStream(double dId, 
   return SendRTMP(packet);
 }
 
+bool CRTMP::SendFCSubscribe(char *subscribepath)
+{
+  Log(LOGDEBUG, "FCSubscribe: %s", subscribepath);
+  RTMPPacket packet;
+  packet.m_nChannel = 0x03;   // control channel (invoke)
+  packet.m_headerType = RTMP_PACKET_SIZE_MEDIUM;
+  packet.m_packetType = 0x14; // INVOKE
+
+  packet.AllocPacket(256); // should be enough
+  char *enc = packet.m_body;
+  enc += EncodeString(enc, "FCSubscribe");
+  enc += EncodeNumber(enc, 0);
+  *enc = 0x05; // NULL
+  enc++;
+  enc += EncodeString(enc, subscribepath);
+
+  packet.m_nBodySize = enc - packet.m_body;
+
+  return SendRTMP(packet);
+}
+
 bool CRTMP::SendCreateStream(double dStreamId)
 {
   RTMPPacket packet;
@@ -605,7 +638,7 @@ bool CRTMP::SendPlay()
   packet.m_packetType = 0x14; // INVOKE
   packet.m_nInfoField2 = m_stream_id; //0x01000000;
 
-  packet.AllocPacket(256); // should be enough
+  packet.AllocPacket(512); // should be enough
   char *enc = packet.m_body;
   enc += EncodeString(enc, "play");
   enc += EncodeNumber(enc, 0.0);
@@ -630,7 +663,7 @@ bool CRTMP::SendPlay()
   Log(LOGERROR, "dd: %lf", d);
   exit(1);
   // */
-  enc += EncodeNumber(enc, 0.0); // tincan
+  //enc += EncodeNumber(enc, 0.0); // tincan
   //////enc += EncodeNumber(enc, -1.0); // seems to work for all so far
   //enc += EncodeNumber(enc, -1000.0); // k-tv.at
   
@@ -702,6 +735,10 @@ void CRTMP::HandleInvoke(const RTMPPacke
       SendPing(3, 0, 300);
 
       SendCreateStream(2.0);
+
+      if (GetSubscribe()) {
+        SendFCSubscribe(GetSubscribePath());
+      }
     }
     else if (methodInvoked == "createStream")
     {
@@ -723,6 +760,10 @@ void CRTMP::HandleInvoke(const RTMPPacke
   {
     //SendCheckBW();
   }
+  else if (method == "onFCSubscribe")
+  {
+    //onFCSubscribe
+  }
   else if (method == "_onbwcheck")
   {
     SendCheckBWResult();
diff -rupN rtmpdump/rtmpdump.cpp rtmpdump-mlbviewer/rtmpdump.cpp
--- rtmpdump/rtmpdump.cpp	2009-03-12 10:13:04.000000000 -0700
+++ rtmpdump-mlbviewer/rtmpdump.cpp	2009-04-05 22:20:05.000000000 -0700
@@ -407,6 +407,7 @@ int main(int argc, char **argv)
 	bool bResume = false;    // true in resume mode
 	bool bNoHeader = false;  // in resume mode this will tell not to write an FLV header again
 	bool bAudioOnly = false; // when resuming this will tell whether its an audio only stream
+        bool bSubscribe = false; // for CDN FCSubscribe method after connect
 	uint32_t dSeek = 0;	 // seek position in resume mode, 0 otherwise
 	uint32_t bufferTime = 10*60*60*1000; // 10 hours as default
 
@@ -422,6 +423,7 @@ int main(int argc, char **argv)
 
 	char *hostname = 0;
 	char *playpath = 0;
+        char *subscribepath = 0;
 	int port = -1;
 	int protocol = RTMP_PROTOCOL_UNDEFINED;
 
@@ -442,26 +444,27 @@ int main(int argc, char **argv)
 
 	int opt;
 	struct option longopts[] = {
-		{"help",    0, NULL, 'h'},
-		{"host",    1, NULL, 'n'},
-		{"port",    1, NULL, 'c'},
-		{"protocol",1, NULL, 'l'},
-		{"playpath",1, NULL, 'y'},
-		{"rtmp",    1, NULL, 'r'},
-		{"swfUrl",  1, NULL, 's'},
-		{"tcUrl",   1, NULL, 't'},
-		{"pageUrl", 1, NULL, 'p'},
-		{"app",     1, NULL, 'a'},
-		{"auth",    1, NULL, 'u'},
-		{"flashVer",1, NULL, 'f'},
-		{"flv",     1, NULL, 'o'},
-		{"resume",  0, NULL, 'e'},
+		{"help",       0, NULL, 'h'},
+		{"host",       1, NULL, 'n'},
+		{"port",       1, NULL, 'c'},
+		{"protocol",   1, NULL, 'l'},
+		{"playpath",   1, NULL, 'y'},
+		{"rtmp",       1, NULL, 'r'},
+		{"swfUrl",     1, NULL, 's'},
+		{"tcUrl",      1, NULL, 't'},
+		{"pageUrl",    1, NULL, 'p'},
+		{"app",        1, NULL, 'a'},
+		{"auth",       1, NULL, 'u'},
+		{"flashVer",   1, NULL, 'f'},
+		{"flv",        1, NULL, 'o'},
+		{"subscribe",  1, NULL, 'b'},
+		{"resume",     0, NULL, 'e'},
 		{0,0,0,0}
 	};
 
 	signal(SIGINT, sigIntHandler);
 
-	while((opt = getopt_long(argc, argv, "hr:s:t:p:a:f:o:u:n:c:l:y:", longopts, NULL)) != -1) {
+	while((opt = getopt_long(argc, argv, "hr:s:t:p:a:f:o:u:n:c:l:y:b:", longopts, NULL)) != -1) {
 		switch(opt) {
 			case 'h':
 				printf("\nThis program dumps the media content streamed over rtmp.\n\n");
@@ -477,7 +480,8 @@ int main(int argc, char **argv)
 				printf("--app|-a app\t\tName of player used\n");
 				printf("--auth|-u string\tAuthentication string to be appended to the connect string\n");
 				printf("--flashVer|-f string\tflash version string (default: \"LNX 9,0,124,0\")\n");
-				printf("--flv|-o string\t\tflv output file name\n\n");
+				printf("--flv|-o string\t\tflv output file name\n");
+                                printf("--subscribe|-b string\tstream name to subscribe to\n\n");
 				printf("--resume|-e\n\n");
 				printf("If you don't pass parameters for swfUrl, tcUrl, pageUrl, app or auth these propertiews will not be included in the connect ");
 				printf("packet.\n\n");
@@ -551,6 +555,10 @@ int main(int argc, char **argv)
 			case 'e':
 				bResume = true;
 				break;
+                        case 'b':
+                                subscribepath = optarg;
+                                bSubscribe = true;
+                                break;
 			case 'u':
 				auth = optarg;		
 				break;
@@ -607,6 +615,9 @@ int main(int argc, char **argv)
 	Log(LOGDEBUG, "Setting buffer time to: %dms", bufferTime);
 	rtmp->SetBufferMS(bufferTime);
 
+	rtmp->SetSubscribe(bSubscribe);
+        rtmp->SetSubscribePath(subscribepath);
+
 	unsigned long size = 0;
         uint32_t timestamp = 0;
 
@@ -877,9 +888,9 @@ start:
 	if(duration > 0) {
 		percent = ((double)timestamp) / (duration*1000.0)*100.0;
                 percent = round(percent*10.0)/10.0;
-                printf("%.3f KB (%.1f%%)\n", (double)size/1024.0, percent);
+                //printf("%.3f KB (%.1f%%)\n", (double)size/1024.0, percent);
         } else {
-                printf("%.3f KB\n", (double)size/1024.0);
+                //printf("%.3f KB\n", (double)size/1024.0);
         }
 
 	do
@@ -906,9 +917,9 @@ start:
 				}
 				percent = ((double)timestamp) / (duration*1000.0)*100.0;
 				percent = round(percent*10.0)/10.0;
-				printf("\r%.3f KB (%.1f%%)", (double)size/1024.0, percent);
+				//printf("\r%.3f KB (%.1f%%)", (double)size/1024.0, percent);
 			} else {
-				printf("\r%.3f KB", (double)size/1024.0);
+				//printf("\r%.3f KB", (double)size/1024.0);
 			}
 		}
 		#ifdef _DEBUG
diff -rupN rtmpdump/rtmp.h rtmpdump-mlbviewer/rtmp.h
--- rtmpdump/rtmp.h	2009-03-11 14:37:17.000000000 -0700
+++ rtmpdump-mlbviewer/rtmp.h	2009-04-04 15:08:58.000000000 -0700
@@ -111,6 +111,11 @@ class CRTMP
       static double ReadNumber(const char *data);
 
       static bool FindFirstMatchingProperty(AMFObject &obj, std::string name, AMFObjectProperty &p);
+     
+      bool GetSubscribe();
+      void SetSubscribe(bool subscribe);
+      char * GetSubscribePath();
+      void SetSubscribePath(char *path);
 
     protected:
       bool HandShake();
@@ -123,6 +128,7 @@ class CRTMP
       bool SendPing(short nType, unsigned int nObject, unsigned int nTime = 0);
       bool SendBGHasStream(double dId, char *playpath);
       bool SendCreateStream(double dStreamId);
+      bool SendFCSubscribe(char *playpath);
       bool SendPlay();
       bool SendPause();
       bool SendSeek(double dTime);
@@ -156,6 +162,9 @@ class CRTMP
       int  m_nBufferMS;
       int  m_stream_id; // returned in _result from invoking createStream
 
+      bool bSubscribe;
+      char *subscribepath;
+
       //std::string m_strPlayer;
       //std::string m_strPageUrl;
       //std::string m_strLink;
